  apiVersion: v1
  kind: Pod
  metadata:
    labels:
      app: machine
      machine-provider: local
      networking.gardener.cloud/from-prometheus: allowed
      networking.gardener.cloud/from-shoot-apiserver: allowed
      networking.gardener.cloud/to-dns: allowed
      networking.gardener.cloud/to-istio-ingressgateway: allowed
      networking.gardener.cloud/to-private-networks: allowed
      networking.gardener.cloud/to-public-networks: allowed
      networking.gardener.cloud/to-seed-apiserver: allowed
      networking.gardener.cloud/to-shoot-apiserver: allowed
      networking.gardener.cloud/to-shoot-networks: allowed
    name: local
    namespace: shoot--local--e2e-default
  spec:
    containers:
      - env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
        image: danielfoehrkn/machine-controller-manager-provider-local-node:0.14.0
        imagePullPolicy: IfNotPresent
        name: node
#        command: ["/usr/bin/bash"]
#        args: ["-c","ls /usr/local/bin/ && unshare --cgroup /usr/local/bin/entrypoint /sbin/init"]
#        command: [ "unshare" ]
#        args: [ "--cgroup", "/usr/local/bin/entrypoint" ]
#        command: [ "sleep" ]
#        args: [ "3000" ]
#        command: [ "entry" ]
        ports:
          - containerPort: 30123
            name: vpn-shoot
            protocol: TCP
#        readinessProbe:
#          exec:
#            command:
#              - sh
#              - -c
#              - /opt/bin/kubectl --kubeconfig /var/lib/kubelet/kubeconfig-real get no $NODE_NAME
#          failureThreshold: 3
#          periodSeconds: 10
#          successThreshold: 1
#          timeoutSeconds: 1
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - mountPath: /etc/machine
            name: userdata
          - mountPath: /var/lib/containerd
            name: containerd
          - mountPath: /lib/modules
            name: modules
            readOnly: true
#          - name: entry
#            mountPath: /usr/local/bin/entry
    dnsConfig:
      nameservers:
        - 10.2.27.187
      options:
        - name: ndots
          value: "5"
      searches:
        - shoot--local--e2e-default.svc.cluster.local
        - svc.cluster.local
        - cluster.local
    dnsPolicy: None
    enableServiceLinks: true
    nodeName: gardener-local-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
      - effect: NoExecute
        key: node.kubernetes.io/not-ready
        operator: Exists
        tolerationSeconds: 300
      - effect: NoExecute
        key: node.kubernetes.io/unreachable
        operator: Exists
        tolerationSeconds: 300
    volumes:
      - name: userdata
        secret:
          defaultMode: 511
          secretName: machine-shoot--local--e2e-default-local2-f7957-bc8n2-userdata
      - emptyDir: {}
        name: containerd
      - hostPath:
          path: /lib/modules
          type: ""
        name: modules
#      - name: entry
#        configMap:
#          name: entry
#---
#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: entry
#data:
#  entry: |-
#    {
#      ls /usr/local/bin && ls /sys/fs/cgroup && unshare --cgroup /usr/local/bin/entrypoint
#    }